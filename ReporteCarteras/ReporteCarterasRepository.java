/**
 * ***********************************************************************
 * Autor   : Jaime Ignacio Valenzuela - VMetrix International Spa.
 * Version : v3.0
 * Fecha   : 14/03/2022.
 * Proyecto: Pensiones Profuturo - ReporteCarteras
*/

package com.vmetrix.v3.custom.proyector.ReporteCarteras;

import com.vmetrix.v3.custom.EnumPensiones.enums.EnumsPensionesInstrument;
import com.vmetrix.v3.custom.EnumPensiones.enums.EnumsPensionesPortfolios;
import com.vmetrix.v3.custom.EnumPensiones.enums.EnumsPensionesProducts;
import com.vmetrix.v3.custom.EnumPensiones.enums.EnumsPensionesUserTranDef;
import com.vmetrix.v3.custom.EnumPensiones.enums.EnumsPensionesAcctResult;
import com.vmetrix.v3.custom.commons.db.ColumnType;
import com.vmetrix.v3.custom.commons.db.Parameter;
import com.vmetrix.v3.custom.commons.db.Query;

public interface ReporteCarterasRepository {
	
	
	/**
     * Retorna el Reporte Cartera para la cartera
     * @parameter I_PROCESS_DATE process date
     * @parameter K_PROY cantidad k de proyecciones
     * 
     */
	Query qReporteCarteras = Query.withSQL(
				String.join("  \n ",
							"  WITH PARAMETERS AS (",
							"      SELECT",
							"          :I_PROCESS_DATE  AS PROCESS_DATE",
							"          ,:I_PROCESS_DATE  AS PROJ_DATE",
							"      FROM DUAL	),",
							" /*--PERIOD DATES*/",
							"  P_DATES AS (",
							"  SELECT ",
							"  	PERIOD_DATE ",
							"  FROM TABLE(VCUBE_USER.PENS.TVF_PROJ_PERIOD(:I_PROCESS_DATE ))",
							"  fetch first :K_PROY rows only",
							"  ), /*FECHAS DE CARTERA VER COMO DETERMINAR ESTO PONER UNA VARIABLE GLOBAL*/",
							"  ",
							"   /*--obtener los tran info de clasificacion contable y de riesgo */",
							"  CLASIFICACIONES AS(   ",
							" SELECT ",
							" 	A.PROCESS_DATE ",
							" 	,A.TRAN_ID",
							" 	,A.UTD_VALUE CLAS_CONTABLE",
							" 	,B.UTD_VALUE CLAS_RIESGO",
							" FROM VCUBE.USER_TRAN_DEF_STRING A ",
							"            LEFT JOIN VCUBE.USER_TRAN_DEF_STRING B ON (A.TRAN_ID = B.TRAN_ID AND A.PROCESS_DATE = B.PROCESS_DATE  AND B.UTD_ID = "+EnumsPensionesUserTranDef.UTD_PENS_TRAN_CLASIF_RIESGO.toInt()+" )",
							" WHERE A.UTD_ID = "+EnumsPensionesUserTranDef.UTD_PENS_TRAN_CLASIF_CONTABLE.toInt()+"",
							" AND A.PROCESS_DATE = :I_PROCESS_DATE ",
							" ),",
							"  /*-- cte base con todas las transacciones consideradas dentro del calculo */",
							" BASE_TRANSACTIONS AS (              ",
							" SELECT",
							"  T.PROCESS_DATE AS PROCESS_DATE",
							"  ,T.TRAN_DEAL",
							"  ,T.PORT_ID",
							"  ,C.CCY_NAME ",
							"  ,I.INS_ID",
							"  ,ID.INSD_TICKER INSTRUMENTO",
							"  ,VV.TV AS TIPO_VALOR",
							"  ,VV.EMISORA ",
							"  ,VV.SERIE ",
							"  , TTYPE.TRANT_NAME AS T",
							"  , T.TRAN_TRADE_DATE AS F_ULT_COMPRA",
							"  , T.PROCESS_DATE + VV.DIAS_VENC AS F_VTO",
							"  , VV.PLAZO ",
							"  , VV.DIAS_VENC DXV",
							"  , YIELD.UTD_VALUE/100.00 AS TASA_COMPRA",
							"  , CLAS.CLAS_CONTABLE",
							"  ,T.TRAN_CLOSE_POS AS TRAN_POSITION ",
							"  , CASE ",
							"  	WHEN CLAS.CLAS_CONTABLE = 'A Financiar' THEN VV.RENDIMIENTO/100.00 ELSE YIELD.UTD_VALUE/100.00 ",
							"   END AS TRAN_RATE",
							" , VV.INTERES_DEV  AS INTERES_CPN /*ES EL VALOR EN T0*/",
							"  , VV.TASA_CUPON_VIGENTE AS TASA_CUPON ",
							"  , VV.FECHA_FIN_CUPON   ",
							"  , VV.FECHA_INICIO_CUPON ",
							"  , CASE WHEN CLAS.CLAS_RIESGO = 'Reservas' THEN T.TRAN_CLOSE_POS ELSE 0.0 END AS TIT_TECNICAS",
							"  , CASE WHEN CLAS.CLAS_RIESGO = 'Capital' THEN T.TRAN_CLOSE_POS ELSE 0.0 END AS TIT_CAPITAL",
							"  , CASE WHEN CLAS.CLAS_RIESGO = 'Otros Pasivos' THEN T.TRAN_CLOSE_POS ELSE 0.0 END AS TIT_OTROS",
							"  ,T.TRAN_SETTLE_DATE /*PARA VALORIZAR*/",
							"  , VV.PRECIO_SUCIO AS PS_VALMER",
							"  , MON.PRECIO_SUCIO AS DIVISA ",
							"      FROM VCUBE.TRANSACTION T",
							"          LEFT JOIN PARAMETERS PARAM ON ( 1 = 1 )",
							"          LEFT JOIN VCUBE.INSTRUMENT I ON ( I.INS_ID = T.INS_ID  AND I.PROCESS_DATE = T.PROCESS_DATE  )",
							"          LEFT JOIN VCUBE.INS_DETAIL ID ON ( ID.INS_ID = T.INS_ID AND ID.PROCESS_DATE = T.PROCESS_DATE  )",
							"          LEFT JOIN VCUBE.USER_TRAN_DEF_DOUBLE YIELD ON ( T.TRAN_ID = YIELD.TRAN_ID AND T.PROCESS_DATE = YIELD.PROCESS_DATE )",
							"          LEFT JOIN VCUBE.USER_TRAN_DEF_DATE DT ON ( T.TRAN_ID = DT.TRAN_ID AND T.PROCESS_DATE = DT.PROCESS_DATE AND DT.UTD_ID  = "+EnumsPensionesUserTranDef.UTD_PENS_TRAN_FECHA_RESOLUCION.toInt()+")",
							"          LEFT JOIN VCUBE.BUY_SELL BS ON ( BS.BS_ID  = T.BS_ID )",
							"          LEFT JOIN CLASIFICACIONES CLAS ON (T.TRAN_ID = CLAS.TRAN_ID AND T.PROCESS_DATE = CLAS.PROCESS_DATE )",
							"          LEFT JOIN VCUBE_USER.VECTOR_VALMER VV ON (ID.INSD_TICKER = VV.INSTRUMENTO AND T.PROCESS_DATE = VV.PROCESS_DATE )",
							"       	 LEFT JOIN VCUBE.CURRENCY C ON (I.BASE_CCY_ID = C.CCY_ID)",
							"       	 LEFT JOIN VCUBE.TRAN_TYPE TTYPE ON (TTYPE.TRANT_ID = T.TRANT_ID)",
							"       	 LEFT JOIN VCUBE_USER.VECTOR_VALMER MON ON (T.PROCESS_DATE = MON.PROCESS_DATE AND MON.INSTRUMENTO = concat(concat(concat('*C_MXP', C.CCY_NAME), '_'), C.CCY_NAME))",
							"      WHERE",
							"          T.PROCESS_DATE = PARAM.PROCESS_DATE",
							"          AND I.PROD_ID = 5",
							"          AND T.ASTT_ID = 2",
							"          AND YIELD.UTD_ID = "+EnumsPensionesUserTranDef.UTD_PRICING_YIELD.toInt()+"",
							"          AND T.PORT_ID IN ("+EnumsPensionesPortfolios.IMSS.toInt()+","+EnumsPensionesPortfolios.ISSSTE.toInt()+","+EnumsPensionesPortfolios.PORVENIR.toInt()+")",
							"          AND BS.BS_ID = 0",
							" 		 AND ID.INSD_TICKER NOT IN ('97_MXMACFW_07-4U')" ,
							" ),",
							" ",
							" /* CTE QUE OBTIENE LOS DIFERENTES FLUJOS PARA CADA INSTRUMENTO */",
							"  CASHFLOWS AS (",
							"  SELECT",
							"      T.*",
							"      ,INTR.INT_FLOW",
							"      ,INTR.INT_START_DATE",
							"      ,INTR.INT_END_DATE",
							"      ,INTR.INT_PAYMENT_DATE",
							"     -- ,LAST_DAY(INTR.INT_END_DATE) P_DATE",
							"      ,INTR.INT_AMOUNT + NVL(CF.CF_AMOUNT, 0) TOTAL_AMOUNT",
							"      ,YC.YLDCMP_NAME",
							"      ,DCC.DCC_NAME ",
							"      ,INTR.INT_NOTIONAL ",
							"  FROM BASE_TRANSACTIONS T",
							"      LEFT JOIN PARAMETERS PARAM ON ( 1 = 1 )",
							"      LEFT JOIN VCUBE.INSTRUMENT I ON (I.INS_ID = T.INS_ID AND I.PROCESS_DATE= T.PROCESS_DATE)",
							"      LEFT JOIN VCUBE.INS_DETAIL ID ON (I.INS_ID = ID.INS_ID AND ID.PROCESS_DATE = T.PROCESS_DATE)",
							"      LEFT JOIN VCUBE.CURRENCY C ON (I.BASE_CCY_ID = C.CCY_ID)",
							"      LEFT JOIN VCUBE.INTEREST INTR ON (I.INS_ID = INTR.INS_ID AND INTR.PROCESS_DATE = T.PROCESS_DATE)",
							"      LEFT JOIN VCUBE.CFLOW CF ON (I.INS_ID = CF.INS_ID AND INTR.INT_END_DATE = CF.CF_PAYMENT_DATE AND CF.PROCESS_DATE = T.PROCESS_DATE)",
							"      LEFT JOIN VCUBE.YIELD_COMPOUNDING YC ON (ID.YLDCMP_ID = YC.YLDCMP_ID)",
							"      LEFT JOIN VCUBE.SIDE SD ON (I.INS_ID = SD.INS_ID AND I.PROCESS_DATE = SD.PROCESS_DATE)",
							"      LEFT JOIN VCUBE.DAY_COUNT_CONV DCC ON (SD.DCC_ID = DCC.DCC_ID)",
							"  WHERE",
							"       INTR.INT_END_DATE > PARAM.PROJ_DATE	),",
							"       ",
							"       ",
							" VP_DAYS AS (  ",
							"  SELECT",
							"      P.PERIOD_DATE",
							"      ,C.*",
							"      ,CASE ",
							"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM P.PERIOD_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM P.PERIOD_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM P.PERIOD_DATE),31,30,EXTRACT(DAY FROM P.PERIOD_DATE))) ",
							"      	ELSE INT_END_DATE - P.PERIOD_DATE ",
							"      END ",
							"      	AS DAYS ",
							"      ,CASE ",
							"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM TRAN_SETTLE_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM TRAN_SETTLE_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM TRAN_SETTLE_DATE),31,30,EXTRACT(DAY FROM TRAN_SETTLE_DATE)))",
							"      	ELSE INT_PAYMENT_DATE - TRAN_SETTLE_DATE ",
							"      END ",
							"      AS DAYS_FROM_SETTLE",
							"      ,CASE ",
							"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM INT_START_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM INT_START_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM INT_START_DATE),31,30,EXTRACT(DAY FROM INT_START_DATE)))",
							"      	ELSE INT_END_DATE - INT_START_DATE ",
							"      END ",
							"      AS COUPON_DAYS ",
							"      ,CASE ",
							"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM PROCESS_DATE)-EXTRACT(YEAR FROM FECHA_INICIO_CUPON)) + 30 * (EXTRACT(MONTH FROM PROCESS_DATE)-EXTRACT(MONTH FROM FECHA_INICIO_CUPON)) +  (DECODE(EXTRACT(DAY FROM PROCESS_DATE),31,30,EXTRACT(DAY FROM PROCESS_DATE))-DECODE(EXTRACT(DAY FROM FECHA_INICIO_CUPON),31,30,EXTRACT(DAY FROM FECHA_INICIO_CUPON)))",
							"      	ELSE PROCESS_DATE - FECHA_INICIO_CUPON ",
							"      END  ",
							"      AS INT_DEV_DAYS ",
							"      ,CASE ",
							"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM F_ULT_COMPRA)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM F_ULT_COMPRA)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM F_ULT_COMPRA),31,30,EXTRACT(DAY FROM F_ULT_COMPRA))) ",
							"      	ELSE INT_END_DATE - F_ULT_COMPRA ",
							"      END ",
							"      	AS DAYS_FECHA_COMPRA",
							"       ,CASE ",
							"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM PROCESS_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM PROCESS_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM PROCESS_DATE),31,30,EXTRACT(DAY FROM PROCESS_DATE))) ",
							"      	ELSE INT_END_DATE - PROCESS_DATE ",
							"      END ",
							"      	AS DAYS_PROCESS_DATE",
							"  FROM P_DATES P",
							"          LEFT JOIN CASHFLOWS C ON (C.INT_END_DATE > P.PERIOD_DATE)",
							"  WHERE P.PERIOD_DATE < C.INT_END_DATE	",
							"  ",
							"  ),",
							" ",
							"  ",
							" VP AS (  ",
							"      SELECT",
							"         vp.*",
							"       ,CASE",
							"         WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS  / COUPON_DAYS )",
							"         WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )",
							"         WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )        ",
							"         WHEN YLDCMP_NAME = 'None' AND TIPO_VALOR IN ('SP','SC') THEN 1.0 / POWER ( 1.0 + TRAN_RATE * DAYS_FROM_SETTLE / 360, DAYS / DAYS_FROM_SETTLE   )",
							"      ELSE -1000000.0",
							"      END DF",
							"       ,CASE",
							"         WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_FECHA_COMPRA  / COUPON_DAYS )",
							"         WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_FECHA_COMPRA / COUPON_DAYS  )",
							"         WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_FECHA_COMPRA / COUPON_DAYS  )        ",
							"         WHEN YLDCMP_NAME = 'None' AND TIPO_VALOR IN ('SP','SC') THEN 1.0 / POWER ( 1.0 + TRAN_RATE * DAYS_FROM_SETTLE / 360, DAYS_FECHA_COMPRA / DAYS_FROM_SETTLE   )",
							"      ELSE -1000000.0",
							"      END DF_FECHA_COMPRA",
							"      ,CASE",
							"         WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_PROCESS_DATE  / COUPON_DAYS )",
							"         WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_PROCESS_DATE / COUPON_DAYS  )",
							"         WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_PROCESS_DATE / COUPON_DAYS  )        ",
							"         WHEN YLDCMP_NAME = 'None' AND TIPO_VALOR IN ('SP','SC') THEN 1.0 / POWER ( 1.0 + TRAN_RATE * DAYS_FROM_SETTLE / 360, DAYS_PROCESS_DATE / DAYS_FROM_SETTLE   )",
							"      ELSE -1000000.0",
							"      END DF_PROCESS_DATE",
							"   , CASE WHEN FECHA_FIN_CUPON = INT_END_DATE THEN TASA_CUPON * INT_NOTIONAL * INT_DEV_DAYS / 360.0 ELSE 0.0 END AS INTERES_CPN_YO",
							"  	--, ",
							"  FROM VP_DAYS vp",
							"  ) ",
							" --SACAR LOS VALORES QUE SE NECESITEN",
							"  SELECT  ",
							" 	VP.PROCESS_DATE",
							" 	 ,VP.TRAN_DEAL",  
							" 	 ,PF.PORT_NAME AS PORT_ID", 
							" 	 ,VP.CCY_NAME",
							" 	 ,CASE WHEN VP.TIPO_VALOR IN ('SC','SP') THEN 'BONO CUPON CERO A DESCUENTO' ELSE 'BONO' END AS INSTRUMENTO",
							" 	 ,VP.TIPO_VALOR",
							" 	 ,VP.EMISORA",
							" 	 ,VP.SERIE",
							" 	 ,VP.T",
							" 	 ,VP.F_ULT_COMPRA",
							" 	 ,VP.F_VTO",
							" 	 ,VP.PLAZO",
							" 	 ,VP.DXV",
							" 	 ,VP.TASA_COMPRA AS TASA_PACT",
							" 	 ,VP.CLAS_CONTABLE AS C",
							" 	 ,VP.TRAN_POSITION AS TITULOS",
							" 	 ,(SUM(TOTAL_AMOUNT* DF_FECHA_COMPRA) * DIVISA + INTERES_CPN)* TRAN_POSITION AS COSTO",
							" 	 ,SUM(TOTAL_AMOUNT* DF) * NVL(RPU.UDI_VALUE,0.0) AS PRECIO",
							" 	 ,VP.TRAN_RATE AS TASA",
							" 	 ,(SUM(TOTAL_AMOUNT* DF_PROCESS_DATE) * DIVISA + INTERES_CPN)* TRAN_POSITION AS VALOR ",
							" 	 ,INTERES_CPN * TRAN_POSITION AS INTERES_CPN",
							" 	 ,SUM(TOTAL_AMOUNT* DF) * NVL(RPU.UDI_VALUE,0.0) * TRAN_POSITION AS TOTAL",
							"  	,VP.TASA_CUPON AS TASA_CPN",
							"  	,VP.FECHA_FIN_CUPON AS F_PROX_CUPON",
							"  	,VP.TIT_TECNICAS",
							"  	,VP.TIT_CAPITAL",
							"  	,VP.TIT_OTROS",
							"  	,VP.PERIOD_DATE AS FECHA_CARTERA",
//							"  	, 'CARTERA' AS TIPO_CARTERA ",	
							" FROM VP VP ",
							" 	LEFT JOIN PARAMETERS PARAM ON (1=1)",
							" 	LEFT JOIN VCUBE_USER.RISK_PROYECCION_UDI RPU ON (RPU.PERIOD_DATE = VP.PERIOD_DATE AND RPU.PROCESS_DATE = VP.PROCESS_DATE)",
							" 	LEFT JOIN VCUBE.PORTFOLIO PF ON (VP.PORT_ID = PF.PORT_ID)", 
							" WHERE VP.PERIOD_DATE >= PARAM.PROJ_DATE",
							" GROUP BY  ",
							" 	VP.PROCESS_DATE",
							" 	 ,VP.TRAN_DEAL",
							" 	 ,PF.PORT_NAME",
							" 	 ,VP.CCY_NAME",
							" 	 ,VP.INSTRUMENTO",
							" 	 ,VP.TIPO_VALOR",
							" 	 ,VP.EMISORA",
							" 	 ,VP.SERIE",
							" 	 ,VP.T",
							" 	 ,VP.F_ULT_COMPRA",
							" 	 ,VP.F_VTO",
							" 	 ,VP.PLAZO",
							" 	 ,VP.DXV",
							" 	 ,VP.TASA_COMPRA",
							" 	 ,VP.CLAS_CONTABLE",
							" 	 ,VP.TRAN_POSITION",
							" 	 ,VP.TRAN_RATE",
							"  	,VP.TASA_CUPON",
							"  	,VP.FECHA_FIN_CUPON",
							"  	,VP.FECHA_INICIO_CUPON",
							"  	,VP.TIT_TECNICAS",
							"  	,VP.TIT_CAPITAL",
							"  	,VP.TIT_OTROS",
							"  	,VP.COUPON_DAYS",
							"  	,VP.INT_DEV_DAYS",
							"  	,PS_VALMER",
							"  	,DIVISA",
							"  	,INTERES_CPN",
							"  	,RPU.UDI_VALUE ",
							"  	,VP.PERIOD_DATE",
							"  	ORDER BY VP.TRAN_DEAL, VP.PERIOD_DATE"
							)).withParameter(Parameter.of("I_PROCESS_DATE", ColumnType.ORACLE_DATE))
							.withParameter(Parameter.of("K_PROY", ColumnType.INTEGER));
	
	
	
	Query qBlotterVentas = Query.withSQL(
			String.join("  \n ",
				" WITH  CLASIFICACIONES AS(",
				"         SELECT",
				" A.PROCESS_DATE",
				"         ,A.TRAN_ID",
				"         ,A.UTD_VALUE CLAS_CONTABLE",
				"         ,B.UTD_VALUE CLAS_RIESGO",
				" FROM VCUBE.USER_TRAN_DEF_STRING A",
				" LEFT JOIN VCUBE.USER_TRAN_DEF_STRING B ON (A.TRAN_ID = B.TRAN_ID AND A.PROCESS_DATE = B.PROCESS_DATE  AND B.UTD_ID = "+EnumsPensionesUserTranDef.UTD_PENS_TRAN_CLASIF_RIESGO.toInt()+")",
				" WHERE A.UTD_ID = "+EnumsPensionesUserTranDef.UTD_PENS_TRAN_CLASIF_CONTABLE.toInt()+"	AND A.PROCESS_DATE = :I_PROCESS_DATE),",
				" /*-- cte base con todas las transacciones consideradas dentro del calculo */",
				" /*-- CARTERA PARA PROJ_DATE = 0 */",
				" BASE_TRANSACTIONS AS (",
				"         SELECT",
				" T.PROCESS_DATE AS PROCESS_DATE",
				"         ,T.TRAN_DEAL",
				"         ,T.PORT_ID",
				"         ,I.INS_ID",
				"         ,ID.INSD_TICKER TICKER",
				"         ,CASE",
				" WHEN CLAS.CLAS_CONTABLE = 'A Financiar' THEN VV.RENDIMIENTO/100.00 ELSE YIELD.UTD_VALUE/100.00",
				" END AS TRAN_RATE",
				"         ,CLAS.CLAS_CONTABLE",
				"         ,CLAS.CLAS_RIESGO",
				"         ,CASE",
				" WHEN DT.UTD_VALUE <= LAST_DAY(T.PROCESS_DATE)  AND DT.UTD_VALUE >= TRUNC(T.PROCESS_DATE,'YEAR') THEN 3",
				" WHEN T.PORT_ID = "+EnumsPensionesPortfolios.PORVENIR.toInt()+" THEN 1",
				" ELSE 2",
				" END  RSCH_ID",
				" ,T.TRAN_CLOSE_POS AS TRAN_POSITION",
				"         ,T.TRAN_SETTLE_DATE",
				"         ,T.TRAN_TRADE_DATE",
				" FROM VCUBE.TRANSACTION T",
				" LEFT JOIN VCUBE.INSTRUMENT I ON ( I.INS_ID = T.INS_ID  AND I.PROCESS_DATE = T.PROCESS_DATE  )",
				" LEFT JOIN VCUBE.INS_DETAIL ID ON ( ID.INS_ID = T.INS_ID AND ID.PROCESS_DATE = T.PROCESS_DATE  )",
				" LEFT JOIN VCUBE.USER_TRAN_DEF_DOUBLE YIELD ON ( T.TRAN_ID = YIELD.TRAN_ID AND T.PROCESS_DATE = YIELD.PROCESS_DATE )",
				" LEFT JOIN VCUBE.USER_TRAN_DEF_DATE DT ON ( T.TRAN_ID = DT.TRAN_ID AND T.PROCESS_DATE = DT.PROCESS_DATE AND DT.UTD_ID  =  "+EnumsPensionesUserTranDef.UTD_PENS_TRAN_FECHA_RESOLUCION.toInt()+")",
				" LEFT JOIN VCUBE.BUY_SELL BS ON ( BS.BS_ID  = T.BS_ID )",
				" LEFT JOIN CLASIFICACIONES CLAS ON (T.TRAN_ID = CLAS.TRAN_ID AND T.PROCESS_DATE = CLAS.PROCESS_DATE )",
				" LEFT JOIN VCUBE_USER.VECTOR_VALMER VV ON (ID.INSD_TICKER = VV.INSTRUMENTO AND T.PROCESS_DATE = VV.PROCESS_DATE )",
				" LEFT JOIN VCUBE.ACCT_RESULT_VALUES ARV_MVALUE ON (T.TRAN_DEAL = ARV_MVALUE.TRAN_DEAL AND T.PROCESS_DATE = ARV_MVALUE.PROCESS_DATE AND ARV_MVALUE.ARTYPE_ID=20255)",
				" WHERE",
				" T.PROCESS_DATE = :I_PROCESS_DATE",
				" AND I.PROD_ID = 5",
				" AND T.ASTT_ID = 2",
				" AND YIELD.UTD_ID = "+EnumsPensionesUserTranDef.UTD_PRICING_YIELD.toInt()+"",
				" AND T.PORT_ID IN  ("+EnumsPensionesPortfolios.IMSS.toInt()+","+EnumsPensionesPortfolios.ISSSTE.toInt()+","+EnumsPensionesPortfolios.PORVENIR.toInt()+")",
				" AND BS.BS_ID = 0",
				" AND ID.INSD_TICKER NOT IN ('97_MXMACFW_07-4U')",
				" ),",
				" ",
				" /****CTE - BLOTTER DE OPERACIONES: OBTIENE LAS OPERACIONES Y LA INFORMACIÓN PARA VALORIZAR****/",
				" BLT_OPERACIONES AS (",
				"         SELECT",
				" ROW_NUMBER() OVER (ORDER BY TRADE_DATE, TRAN_SETTLE_DATE) AS ID_OPERACION",
				"     , BO.PORTFOLIO",
				"         , BO.CLASIFICACION_CONTABLE",
				"         , BO.CLASIFICACION_RIESGO",
				"         , BO.TICKER",
				"         , BO.STOCK",
				"         , BO.BUY_SELL",
				"         , BO.TRADE_DATE",
				"         , BO.TRAN_SETTLE_DATE",
				"         , BO.YIELD/100.00 AS TRAN_RATE",
				"     , BO.PROCESS_DATE",
				"         , ID.INS_ID",
				"         , C.CCY_NAME",
				"         , YC.YLDCMP_NAME",
				"         , DCC.DCC_NAME",
				"         , NVL(RPU.UDI_VALUE,0.0) AS PRECIO_SUCIO", 
				" FROM VCUBE_USER.BLOTTER_OPERACIONES BO",
				" LEFT JOIN VCUBE.INS_DETAIL ID ON (BO.PROCESS_DATE = ID.PROCESS_DATE AND BO.TICKER = ID.INSD_TICKER)",
				" LEFT JOIN VCUBE.INSTRUMENT I ON (ID.PROCESS_DATE = I.PROCESS_DATE AND ID.INS_ID  = I.INS_ID)",
				" LEFT JOIN VCUBE.CURRENCY C ON (I.BASE_CCY_ID = C.CCY_ID)",
				" LEFT JOIN VCUBE.YIELD_COMPOUNDING YC ON (ID.YLDCMP_ID = YC.YLDCMP_ID)",
				" LEFT JOIN VCUBE.SIDE SD ON (I.INS_ID = SD.INS_ID AND I.PROCESS_DATE = SD.PROCESS_DATE)",
				" LEFT JOIN VCUBE.DAY_COUNT_CONV DCC ON (SD.DCC_ID = DCC.DCC_ID)",
				" LEFT JOIN VCUBE_USER.RISK_PROYECCION_UDI RPU ON (RPU.PERIOD_DATE = BO.TRADE_DATE AND RPU.PROCESS_DATE = BO.PROCESS_DATE)", 
				" WHERE BO.PROCESS_DATE = :I_PROCESS_DATE AND BO.BUY_SELL = 'Sell'",
				" ORDER BY TRADE_DATE, TRAN_SETTLE_DATE, TICKER ",
				" ),",
				" /****CTE - CASHFOW DE LOS INSTRUMENTOS DEL BLOTTER + CALCULO DE DIAS CUPON Y PLAZO****/",
				"         CASHFLOWS_BLOTTER AS (",
				"                 SELECT",
				"         BO.*",
				"                 ,INTR.INT_FLOW",
				"                 ,INTR.INT_START_DATE",
				"                 ,INTR.INT_END_DATE",
				"                 ,INTR.INT_PAYMENT_DATE",
				"                 ,INTR.INT_END_DATE - BO.TRADE_DATE AS DAYS /*SE PUEDE USAR EL BO.TRADE_DATE EN CASO DE QUE SE REQUIERA EL CALCULO POR ESTA FECHA (ENVEJECIMIENTO)*/",
				"    ,INTR.INT_END_DATE - INTR.INT_START_DATE AS COUPON_DAYS",
				"    ,INTR.INT_AMOUNT + NVL(CF.CF_AMOUNT, 0) TOTAL_AMOUNT",
				"         FROM BLT_OPERACIONES BO",
				"         LEFT JOIN VCUBE.INTEREST INTR ON  (BO.INS_ID = INTR.INS_ID AND INTR.PROCESS_DATE = BO.PROCESS_DATE)",
				"         LEFT JOIN VCUBE.CFLOW CF ON (BO.INS_ID = CF.INS_ID AND INTR.INT_PAYMENT_DATE = CF.CF_PAYMENT_DATE AND CF.PROCESS_DATE = BO.PROCESS_DATE)",
				"         WHERE INTR.INT_END_DATE > BO.TRADE_DATE /*SE PUEDE USAR EL BO.TRADE_DATE EN CASO DE QUE SE REQUIERA EL CALCULO POR ESTA FECHA (ENVEJECIMIENTO)*/",
				" ),",
				" /****CTE - CALCULO DEL DISCOUNT FACTOR****/",
				"         DF_BLOTTER AS (SELECT",
				" CS.*",
				"         ,CASE",
				" WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS  / COUPON_DAYS )",
				" WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )",
				" WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS )",
				" WHEN YLDCMP_NAME = 'None' AND SUBSTR(TICKER,1,2) IN ('SP','SC') THEN 1.0 / ( 1.0 + TRAN_RATE * DAYS / 360)",
				" ELSE -1000000.0",
				" END DF",
				" FROM CASHFLOWS_BLOTTER CS)",
				" SELECT",
				"         PROCESS_DATE",
				" , TRADE_DATE AS PROJ_DATE",
				"             , ID_OPERACION AS TRAN_DEAL",
				" , PORTFOLIO AS PORT_ID",
				"             , INS_ID",
				"             , TICKER",
				"             , TRAN_RATE",
				"             , CLASIFICACION_CONTABLE AS CLAS_CONTABLE",
				" , CLASIFICACION_RIESGO AS CLAS_RIESGO",
				"             , 3 AS RSCH_ID",  
				" , CASE WHEN BUY_SELL = 'Sell' then DECODE(SUM(TOTAL_AMOUNT*DF*PRECIO_SUCIO),0,0.0,-TRUNC(STOCK/SUM(TOTAL_AMOUNT*DF*PRECIO_SUCIO),0)) ELSE DECODE(SUM(TOTAL_AMOUNT*DF*PRECIO_SUCIO),0,0.0,TRUNC(STOCK/SUM(TOTAL_AMOUNT*DF*PRECIO_SUCIO),0)) END AS TRAN_POSITION",
				"             , TRAN_SETTLE_DATE",
				"     FROM DF_BLOTTER",
				"     GROUP BY",
				"     PROCESS_DATE",
				"             , TRADE_DATE",
				"             , ID_OPERACION",
				"             , PORTFOLIO",
				"             , INS_ID",
				"             , TICKER",
				"             , TRAN_RATE",
				"             , CLASIFICACION_CONTABLE",
				"             , CLASIFICACION_RIESGO",
				"             , 3",
				"             , STOCK",
				"             , TRAN_SETTLE_DATE",
				"             , BUY_SELL",
				"     ORDER BY TICKER, PROJ_DATE" 
				)).withParameter(Parameter.of("I_PROCESS_DATE", ColumnType.ORACLE_DATE));
	
	
	Query qVentasTransactionsPEPS = Query.withSQL(
			String.join("  \n ",
				
				"  WITH  CLASIFICACIONES AS(",
			    "  SELECT",
			    "  A.PROCESS_DATE",
			    "          ,A.TRAN_ID",
			    "          ,A.UTD_VALUE CLAS_CONTABLE",
			    "          ,B.UTD_VALUE CLAS_RIESGO",
			    "  FROM VCUBE.USER_TRAN_DEF_STRING A",
			    "  LEFT JOIN VCUBE.USER_TRAN_DEF_STRING B ON (A.TRAN_ID = B.TRAN_ID AND A.PROCESS_DATE = B.PROCESS_DATE  AND B.UTD_ID = "+EnumsPensionesUserTranDef.UTD_PENS_TRAN_CLASIF_RIESGO.toInt()+")",
			    "  WHERE A.UTD_ID = "+EnumsPensionesUserTranDef.UTD_PENS_TRAN_CLASIF_CONTABLE.toInt()+"	AND A.PROCESS_DATE = :I_PROCESS_DATE),",
			    "  /*-- cte base con todas las transacciones consideradas dentro del calculo */",
			    "  /*-- CARTERA PARA PROJ_DATE = 0 */",
			    "  INSTRUMENTOS_BLOTTER AS (",
			    "          SELECT DISTINCT PROCESS_DATE, PORTFOLIO , CLASIFICACION_CONTABLE , CLASIFICACION_RIESGO , TICKER",
			    " FROM VCUBE_USER.BLOTTER_OPERACIONES WHERE PROCESS_DATE = :I_PROCESS_DATE AND BUY_SELL = 'Sell'",
			    "   )",
			    "  SELECT",
			    "  T.PROCESS_DATE AS PROCESS_DATE",
			    "          ,T.TRAN_DEAL",
			    "          ,T.PORT_ID",
			    "          ,I.INS_ID",
			    "          ,ID.INSD_TICKER TICKER",
			    "          ,CASE",
			    "  WHEN CLAS.CLAS_CONTABLE = 'A Financiar' THEN VV.RENDIMIENTO/100.00 ELSE YIELD.UTD_VALUE/100.00",
			    "  END AS TRAN_RATE",
			    "          ,CLAS.CLAS_CONTABLE",
			    "          ,CLAS.CLAS_RIESGO",
			    "          ,CASE",
			    "  WHEN DT.UTD_VALUE <= LAST_DAY(T.PROCESS_DATE)  AND DT.UTD_VALUE >= TRUNC(T.PROCESS_DATE,'YEAR') THEN 3",
			    "  WHEN T.PORT_ID = "+EnumsPensionesPortfolios.PORVENIR.toInt()+" THEN 1",
			    "  ELSE 2",
			    "  END  RSCH_ID",
			    "   ,T.TRAN_CLOSE_POS AS TRAN_POSITION",
			    "          ,T.TRAN_SETTLE_DATE",
			    "          ,T.TRAN_TRADE_DATE",
			    "          , BO.TICKER AS TICKER_BLOTTER",
			    "  FROM VCUBE.TRANSACTION T",
			    "  LEFT JOIN VCUBE.INSTRUMENT I ON ( I.INS_ID = T.INS_ID  AND I.PROCESS_DATE = T.PROCESS_DATE  )",
			    "  LEFT JOIN VCUBE.INS_DETAIL ID ON ( ID.INS_ID = T.INS_ID AND ID.PROCESS_DATE = T.PROCESS_DATE  )",
			    "  LEFT JOIN VCUBE.USER_TRAN_DEF_DOUBLE YIELD ON ( T.TRAN_ID = YIELD.TRAN_ID AND T.PROCESS_DATE = YIELD.PROCESS_DATE )",
			    "  LEFT JOIN VCUBE.USER_TRAN_DEF_DATE DT ON ( T.TRAN_ID = DT.TRAN_ID AND T.PROCESS_DATE = DT.PROCESS_DATE AND DT.UTD_ID  = 20236)",
			    "  LEFT JOIN VCUBE.BUY_SELL BS ON ( BS.BS_ID  = T.BS_ID )",
			    "  LEFT JOIN CLASIFICACIONES CLAS ON (T.TRAN_ID = CLAS.TRAN_ID AND T.PROCESS_DATE = CLAS.PROCESS_DATE )",
			    "  LEFT JOIN VCUBE_USER.VECTOR_VALMER VV ON (ID.INSD_TICKER = VV.INSTRUMENTO AND T.PROCESS_DATE = VV.PROCESS_DATE )",
			    "  LEFT JOIN INSTRUMENTOS_BLOTTER BO ON (T.PROCESS_DATE = BO.PROCESS_DATE AND T.PORT_ID = BO.PORTFOLIO  AND ID.INSD_TICKER = BO.TICKER AND CLAS.CLAS_RIESGO = BO.CLASIFICACION_RIESGO AND CLAS.CLAS_CONTABLE = BO.CLASIFICACION_CONTABLE)",
			    "  WHERE",
			    "  T.PROCESS_DATE = :I_PROCESS_DATE",
			    "  AND I.PROD_ID = 5",
			    "  AND T.ASTT_ID = 2",
			    "  AND YIELD.UTD_ID = "+EnumsPensionesUserTranDef.UTD_PRICING_YIELD.toInt()+"",
			    "  AND T.PORT_ID IN ("+EnumsPensionesPortfolios.IMSS.toInt()+","+EnumsPensionesPortfolios.ISSSTE.toInt()+","+EnumsPensionesPortfolios.PORVENIR.toInt()+")",
			    "  AND BS.BS_ID = 0",
			    "  AND ID.INSD_TICKER NOT IN ('97_MXMACFW_07-4U')",
			    "  AND BO.TICKER IS NOT NULL",
			    "  ORDER BY 5, 12, 2"
			    )).withParameter(Parameter.of("I_PROCESS_DATE", ColumnType.ORACLE_DATE));
				
	
	
	
	Query qReporteCarterasBlotter = Query.withSQL(
			String.join("  \n ",
				" /*CTE WITH PARAMETERS FROM JAVA */",
				" WITH PARAMETERS AS (",
				"     SELECT",
				"         :I_PROCESS_DATE AS PROCESS_DATE",
				"         ,:I_PROCESS_DATE AS PROJ_DATE",
				"     FROM DUAL	),",
				"     ",
				"     	  P_DATES AS (",
				" SELECT ",
				" 	PERIOD_DATE ",
				" FROM TABLE(VCUBE_USER.PENS.TVF_PROJ_PERIOD(:I_PROCESS_DATE)) WHERE PERIOD_DATE > :I_PROCESS_DATE", 
				" fetch first :K_PROY - 1 rows only",
				" ),",
				"",
				" BLT_OPERACIONES AS (",
				"SELECT ",
				"	ROW_NUMBER() OVER (ORDER BY TRADE_DATE, TRAN_SETTLE_DATE) AS TRAN_DEAL",
				"	, BO.PROCESS_DATE",
				"	, BO.PORTFOLIO",
				"	, C.CCY_NAME",
				"	, ID.INS_ID",
				"	, BO.TICKER ",
				"	, VV.TV AS TIPO_VALOR",
				" 	, VV.EMISORA ",
				" 	, VV.SERIE ",
				"	, 'Trading' AS T",
				"	, BO.TRADE_DATE AS F_ULT_COMPRA",
				"	, BO.TRADE_DATE ", 
				"	, BO.YIELD/100.00 AS TASA_COMPRA",
				"	, BO.CLASIFICACION_CONTABLE AS CLAS_CONTABLE",
				"	, BO.YIELD/100.00 AS TRAN_RATE",
				"	, VV.PLAZO",
				"	, VV.DIAS_VENC DXV",
				"	, VV.INTERES_DEV AS INTERES_CPN",
				"	, VV.TASA_CUPON_VIGENTE AS TASA_CUPON ",
				" 	, VV.FECHA_FIN_CUPON   ",
				" 	, VV.FECHA_INICIO_CUPON ",
				" 	, BO.CLASIFICACION_RIESGO ",
				"	, BO.STOCK ",
				"	, BO.BUY_SELL ",
				"	, BO.TRAN_SETTLE_DATE ",
				"	, YC.YLDCMP_NAME ",
				"	, DCC.DCC_NAME ",
				"	, nvl(RPU.UDI_VALUE,0.0) AS DIVISA", 
				"	, VV.PRECIO_SUCIO",
				"	, BO.PROCESS_DATE + VV.DIAS_VENC AS F_VTO",
				"FROM VCUBE_USER.BLOTTER_OPERACIONES BO",
				"		LEFT JOIN VCUBE.INS_DETAIL ID ON (BO.PROCESS_DATE = ID.PROCESS_DATE AND BO.TICKER = ID.INSD_TICKER)",
				"		LEFT JOIN VCUBE.INSTRUMENT I ON (ID.PROCESS_DATE = I.PROCESS_DATE AND ID.INS_ID  = I.INS_ID)",
				"		LEFT JOIN VCUBE.CURRENCY C ON (I.BASE_CCY_ID = C.CCY_ID)",
				"		LEFT JOIN VCUBE.YIELD_COMPOUNDING YC ON (ID.YLDCMP_ID = YC.YLDCMP_ID)",
				"		LEFT JOIN VCUBE.SIDE SD ON (I.INS_ID = SD.INS_ID AND I.PROCESS_DATE = SD.PROCESS_DATE)",
				"	    LEFT JOIN VCUBE.DAY_COUNT_CONV DCC ON (SD.DCC_ID = DCC.DCC_ID)",
				"	    LEFT JOIN VCUBE_USER.RISK_PROYECCION_UDI RPU ON (RPU.PERIOD_DATE = BO.TRADE_DATE AND RPU.PROCESS_DATE = BO.PROCESS_DATE)", 
				"	    LEFT JOIN VCUBE_USER.VECTOR_VALMER vv ON (BO.PROCESS_DATE = VV.PROCESS_DATE AND VV.INSTRUMENTO = BO.TICKER)",
				"WHERE BO.PROCESS_DATE = :I_PROCESS_DATE AND BO.BUY_SELL = 'Buy'", 
				"ORDER BY TRADE_DATE, TRAN_SETTLE_DATE, TICKER ",
				"),",
				"",
				"CASHFLOWS_BLOTTER AS (",
				"SELECT ",
				"	BO.*",
				"   ,INTR.INT_FLOW",
				"   ,INTR.INT_START_DATE",
				"   ,INTR.INT_END_DATE",
				"   ,INTR.INT_PAYMENT_DATE",
				"   ,INTR.INT_END_DATE - BO.TRADE_DATE AS DAYS ", 
				"   ,INTR.INT_END_DATE - INTR.INT_START_DATE AS COUPON_DAYS",
				"   ,INTR.INT_AMOUNT + NVL(CF.CF_AMOUNT, 0) TOTAL_AMOUNT ",
				"   ,INTR.INT_NOTIONAL ",
				"FROM BLT_OPERACIONES BO",
				"		LEFT JOIN VCUBE.INTEREST INTR ON  (BO.INS_ID = INTR.INS_ID AND INTR.PROCESS_DATE = BO.PROCESS_DATE)",
				"	   	LEFT JOIN VCUBE.CFLOW CF ON (BO.INS_ID = CF.INS_ID AND INTR.INT_PAYMENT_DATE = CF.CF_PAYMENT_DATE AND CF.PROCESS_DATE = BO.PROCESS_DATE)	   	",
				"WHERE INTR.INT_END_DATE > BO.TRADE_DATE", 
				"),",
				"	     ",
				"",
				"DF_BLOTTER AS (SELECT",
				"	        CS.*",
				"	      ,CASE",
				"	        WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS  / COUPON_DAYS )",
				"	        WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )",
				"	        WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS )",
				"	       WHEN YLDCMP_NAME = 'None' AND SUBSTR(TICKER,1,2) IN ('SP','SC') THEN 1.0 / ( 1.0 + TRAN_RATE * DAYS / 360)",
				"	     ELSE -1000000.0",
				"	     END DF",
				"	 FROM CASHFLOWS_BLOTTER CS),",
				"	 ",
				"BASE_TRANSACTIONS_T1 AS (	 ",
				"SELECT ",
				"	TRAN_DEAL",
				"	,PROCESS_DATE",
				"	,PORTFOLIO",
				"	,CCY_NAME",
				"	,INS_ID",
				"	,TICKER",
				"	,TIPO_VALOR",
				"	,EMISORA",
				"	,SERIE",
				"	,T",
				"	,F_ULT_COMPRA",
				"	,TASA_COMPRA",
				"	,CLAS_CONTABLE",
				"	,TRAN_RATE",
				"	,INTERES_CPN",
				"	,TASA_CUPON",
				"	,FECHA_FIN_CUPON",
				"	,FECHA_INICIO_CUPON",
				"	,CLASIFICACION_RIESGO",
				"	,STOCK",
				"	,BUY_SELL",
				"	,TRAN_SETTLE_DATE",
				"	,YLDCMP_NAME",
				"	,DCC_NAME",
				"	,DIVISA",
				"	,PRECIO_SUCIO",
				"	, PLAZO",
				"	, DXV",
				"	,F_VTO",
				"	,CASE WHEN SUM(TOTAL_AMOUNT*DF*DIVISA) = 0 THEN 0.0 ELSE TRUNC(STOCK/SUM(TOTAL_AMOUNT*DF*DIVISA),0) END AS TRAN_POSITION  ",
				"	,TRADE_DATE",
				"FROM DF_BLOTTER",
				"GROUP BY ",
				"	TRAN_DEAL",
				"	,PROCESS_DATE",
				"	,PORTFOLIO",
				"	,CCY_NAME",
				"	,INS_ID",
				"	,TICKER",
				"	,TIPO_VALOR",
				"	,EMISORA",
				"	,SERIE",
				"	,T",
				"	,F_ULT_COMPRA",
				"	,TASA_COMPRA",
				"	,CLAS_CONTABLE",
				"	,TRAN_RATE",
				"	,INTERES_CPN",
				"	,TASA_CUPON",
				"	,FECHA_FIN_CUPON",
				"	,FECHA_INICIO_CUPON",
				"	,CLASIFICACION_RIESGO",
				"	,STOCK",
				"	,BUY_SELL",
				"	,TRAN_SETTLE_DATE",
				"	,YLDCMP_NAME",
				"	,DCC_NAME",
				"	,DIVISA",
				"	,PRECIO_SUCIO",
				"	, PLAZO",
				"	, DXV",
				"	,F_VTO",
				"	,TRADE_DATE",
				"),",
				"",
				"CASHFLOWS AS (",
				" SELECT",
				"     T.*",
				"     ,CS.INT_FLOW",
				"     ,CS.INT_START_DATE",
				"     ,CS.INT_END_DATE",
				"     ,CS.INT_PAYMENT_DATE",
				"    -- ,LAST_DAY(INTR.INT_END_DATE) P_DATE",
				"     ,CS.TOTAL_AMOUNT",
				"     ,CS.INT_NOTIONAL",
				" FROM BASE_TRANSACTIONS_T1 T",
				"   	 LEFT JOIN CASHFLOWS_BLOTTER CS ON (T.PROCESS_DATE = CS.PROCESS_DATE AND T.TRAN_DEAL = CS.TRAN_DEAL)",
				" WHERE",
				"      CS.INT_END_DATE > T.F_ULT_COMPRA	),",
				"   ",
				"    ",
				"      ",
				"VP_DAYS AS (  ",
				" SELECT",
				"     P.PERIOD_DATE",
				"     ,C.*",
				"     ,CASE ",
				"     	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM P.PERIOD_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM P.PERIOD_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM P.PERIOD_DATE),31,30,EXTRACT(DAY FROM P.PERIOD_DATE))) ",
				"     	ELSE INT_END_DATE - P.PERIOD_DATE ",
				"     END ",
				"     	AS DAYS ",
				"     ,CASE ",
				"     	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM TRAN_SETTLE_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM TRAN_SETTLE_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM TRAN_SETTLE_DATE),31,30,EXTRACT(DAY FROM TRAN_SETTLE_DATE)))",
				"     	ELSE INT_PAYMENT_DATE - TRAN_SETTLE_DATE ",
				"     END ",
				"     AS DAYS_FROM_SETTLE",
				"     ,CASE ",
				"     	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM INT_START_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM INT_START_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM INT_START_DATE),31,30,EXTRACT(DAY FROM INT_START_DATE)))",
				"     	ELSE INT_END_DATE - INT_START_DATE ",
				"     END ",
				"     AS COUPON_DAYS ",
				"     ,CASE ",
				"     	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM PROCESS_DATE)-EXTRACT(YEAR FROM FECHA_INICIO_CUPON)) + 30 * (EXTRACT(MONTH FROM PROCESS_DATE)-EXTRACT(MONTH FROM FECHA_INICIO_CUPON)) +  (DECODE(EXTRACT(DAY FROM PROCESS_DATE),31,30,EXTRACT(DAY FROM PROCESS_DATE))-DECODE(EXTRACT(DAY FROM FECHA_INICIO_CUPON),31,30,EXTRACT(DAY FROM FECHA_INICIO_CUPON)))",
				"     	ELSE PROCESS_DATE - FECHA_INICIO_CUPON ",
				"     END  ",
				"     AS INT_DEV_DAYS ",
				"     ,CASE ",
				"     	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM F_ULT_COMPRA)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM F_ULT_COMPRA)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM F_ULT_COMPRA),31,30,EXTRACT(DAY FROM F_ULT_COMPRA))) ",
				"     	ELSE INT_END_DATE - F_ULT_COMPRA ",
				"     END ",
				"     	AS DAYS_FECHA_COMPRA",
				"      ,CASE ",
				"     	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM PROCESS_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM PROCESS_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM PROCESS_DATE),31,30,EXTRACT(DAY FROM PROCESS_DATE))) ",
				"     	ELSE INT_END_DATE - PROCESS_DATE ",
				"     END ",
				"     	AS DAYS_PROCESS_DATE",
				" FROM P_DATES P",
				"         LEFT JOIN CASHFLOWS C ON (C.INT_END_DATE > P.PERIOD_DATE)",
				" WHERE P.PERIOD_DATE < C.INT_END_DATE	",
				" ),",
				"",
				" ",
				"VP AS (  ",
				"     SELECT",
				"        vp.*",
				"      ,CASE",
				"        WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS  / COUPON_DAYS )",
				"        WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )",
				"        WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )        ",
				"        WHEN YLDCMP_NAME = 'None' AND TIPO_VALOR IN ('SP','SC') THEN 1.0 / POWER ( 1.0 + TRAN_RATE * DAYS_FROM_SETTLE / 360, DAYS / DAYS_FROM_SETTLE   )",
				"     ELSE -1000000.0",
				"     END DF",
				"      ,CASE",
				"        WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_FECHA_COMPRA  / COUPON_DAYS )",
				"        WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_FECHA_COMPRA / COUPON_DAYS  )",
				"        WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_FECHA_COMPRA / COUPON_DAYS  )        ",
				"        WHEN YLDCMP_NAME = 'None' AND TIPO_VALOR IN ('SP','SC') THEN 1.0 / POWER ( 1.0 + TRAN_RATE * DAYS_FROM_SETTLE / 360, DAYS_FECHA_COMPRA / DAYS_FROM_SETTLE   )",
				"     ELSE -1000000.0",
				"     END DF_FECHA_COMPRA",
				"     ,CASE",
				"        WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_PROCESS_DATE  / COUPON_DAYS )",
				"        WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_PROCESS_DATE / COUPON_DAYS  )",
				"        WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_PROCESS_DATE / COUPON_DAYS  )        ",
				"        WHEN YLDCMP_NAME = 'None' AND TIPO_VALOR IN ('SP','SC') THEN 1.0 / POWER ( 1.0 + TRAN_RATE * DAYS_FROM_SETTLE / 360, DAYS_PROCESS_DATE / DAYS_FROM_SETTLE   )",
				"     ELSE -1000000.0",
				"     END DF_PROCESS_DATE",
				"  , CASE WHEN FECHA_FIN_CUPON = INT_END_DATE THEN TASA_CUPON * INT_NOTIONAL * INT_DEV_DAYS / 360.0 ELSE 0.0 END AS INTERES_CPN_YO",
				" 	--, ",
				" FROM VP_DAYS vp",
				" ) ",
				" ",
				"--SACAR LOS VALORES QUE SE NECESITEN",
				" SELECT  ",
				"	VP.PROCESS_DATE",
				"	 ,VP.TRAN_DEAL",
				" 	 ,PF.PORT_NAME AS PORT_ID", 
				"	 ,VP.CCY_NAME",
				"	 ,CASE WHEN VP.TIPO_VALOR IN ('SC','SP') THEN 'BONO CUPON CERO A DESCUENTO' ELSE 'BONO' END AS INSTRUMENTO",
				"	 ,VP.TIPO_VALOR",
				"	 ,VP.EMISORA",
				"	 ,VP.SERIE",
				"	 ,VP.T",
				"	 ,VP.F_ULT_COMPRA",
				"	 ,VP.F_VTO",
				"	 ,VP.PLAZO",
				"	 ,VP.DXV",
				"	 ,VP.TASA_COMPRA AS TASA_PACT",
				"	 ,VP.CLAS_CONTABLE AS C",
				"	 ,VP.TRAN_POSITION AS TITULOS",
				"	 ,(SUM(TOTAL_AMOUNT* DF_FECHA_COMPRA) * DIVISA + INTERES_CPN) * TRAN_POSITION AS COSTO",
				"	 ,SUM(TOTAL_AMOUNT* DF) * nvl(RPU.UDI_VALUE,0.0) AS PRECIO",
				"	 ,VP.TRAN_RATE AS TASA",
				"	 ,(SUM(TOTAL_AMOUNT* DF_PROCESS_DATE) * DIVISA + INTERES_CPN)* TRAN_POSITION AS VALOR ",
				"	 ,INTERES_CPN * TRAN_POSITION AS INTERES_CPN",
				"	 ,SUM(TOTAL_AMOUNT* DF) * nvl(RPU.UDI_VALUE,0.0) * TRAN_POSITION AS TOTAL",
				" 	,VP.TASA_CUPON AS TASA_CPN",
				" 	,VP.FECHA_FIN_CUPON AS F_PROX_CUPON",
				" 	, CASE WHEN VP.CLASIFICACION_RIESGO  = 'Reservas' THEN TRAN_POSITION ELSE 0.0 END AS TIT_TECNICAS",
				" 	, CASE WHEN VP.CLASIFICACION_RIESGO  = 'Capital' THEN TRAN_POSITION ELSE 0.0 END AS TIT_CAPITAL",
				" 	, CASE WHEN VP.CLASIFICACION_RIESGO  = 'Otros Pasivos' THEN TRAN_POSITION ELSE 0.0 END AS TIT_OTROS",
				" 	,VP.PERIOD_DATE AS FECHA_CARTERA",
//				"  	, 'BLOTTER OPERACIONES' AS TIPO_CARTERA ",	
//				"  	, VP.TRADE_DATE ",
				"FROM VP VP ",
				"	LEFT JOIN PARAMETERS PARAM ON (1=1)",
				"	LEFT JOIN VCUBE_USER.RISK_PROYECCION_UDI RPU ON (RPU.PERIOD_DATE = VP.PERIOD_DATE AND RPU.PROCESS_DATE = VP.PROCESS_DATE)",
				" 	LEFT JOIN VCUBE.PORTFOLIO PF ON (VP.PORTFOLIO = PF.PORT_ID)", 
				"WHERE VP.PERIOD_DATE >= VP.TRADE_DATE",
				"GROUP BY  ",
				"	VP.PROCESS_DATE",
				"	 ,VP.TRAN_DEAL",
				" 	 ,PF.PORT_NAME", 
				"	 ,VP.CCY_NAME",
				"	 ,CASE WHEN VP.TIPO_VALOR IN ('SC','SP') THEN 'BONO CUPON CERO A DESCUENTO' ELSE 'BONO' END",
				"	 ,VP.TIPO_VALOR",
				"	 ,VP.EMISORA",
				"	 ,VP.SERIE",
				"	 ,VP.T",
				"	 ,VP.F_ULT_COMPRA",
				"	 ,VP.F_VTO",
				"	 ,VP.PLAZO",
				"	 ,VP.DXV",
				"	 ,VP.TASA_COMPRA",
				"	 ,VP.CLAS_CONTABLE ",
				"	 ,VP.TRAN_POSITION ",
				"	 ,VP.TRAN_RATE",
				" 	,VP.TASA_CUPON ",
				" 	,VP.FECHA_FIN_CUPON ",
				" 	, CASE WHEN VP.CLASIFICACION_RIESGO  = 'Reservas' THEN TRAN_POSITION ELSE 0.0 END ",
				" 	, CASE WHEN VP.CLASIFICACION_RIESGO  = 'Capital' THEN TRAN_POSITION ELSE 0.0 END ",
				" 	, CASE WHEN VP.CLASIFICACION_RIESGO  = 'Otros Pasivos' THEN TRAN_POSITION ELSE 0.0 END",
				" 	,VP.PERIOD_DATE",
				" 	,VP.DIVISA",
				" 	,VP.INTERES_CPN",
				" 	,RPU.UDI_VALUE",
//				" 	,VP.TRADE_DATE",
				"	ORDER BY VP.TRAN_DEAL, VP.PERIOD_DATE"
				)).withParameter(Parameter.of("I_PROCESS_DATE", ColumnType.ORACLE_DATE))
					.withParameter(Parameter.of("K_PROY", ColumnType.INTEGER));
	
	
	Query qReporteCarterasBlotterVentas = Query.withSQL(
			String.join("  \n ",
				" WITH P_DATES AS (",
				"  SELECT ",
				"  	PERIOD_DATE ",
				"  FROM TABLE(VCUBE_USER.PENS.TVF_PROJ_PERIOD(:I_PROCESS_DATE)) WHERE PERIOD_DATE > :I_PROCESS_DATE ",
				"  fetch first :K_PROY - 1 rows only",
				"  ),",
				" ",
				" BASE_TRANSACTIONS_T1 AS (	",
				" SELECT ",
				"  TRAN_DEAL",
				" , BO.PROCESS_DATE",
				" , TO_CHAR(BO.PORT_ID) AS PORTFOLIO",
				" , C.CCY_NAME",
				" , ID.INS_ID",
				" , BO.TICKER ",
				" , VV.TV AS TIPO_VALOR",
				" , VV.EMISORA ",
				" , VV.SERIE ",
				" , 'Trading' AS T",
				" , BO.TRAN_TRADE_DATE AS F_ULT_COMPRA",
				" , BO.TRAN_RATE AS TASA_COMPRA",
				" , BO.CLAS_CONTABLE ",
				" , BO.TRAN_RATE",
				" , VV.INTERES_DEV AS INTERES_CPN",
				" , VV.TASA_CUPON_VIGENTE AS TASA_CUPON ",
				" , VV.FECHA_FIN_CUPON   ",
				" , VV.FECHA_INICIO_CUPON ",
				" , BO.CLAS_RIESGO ",
				" , 0 AS STOCK",
				" , 'Sell' AS BUY_SELL ",
				" , BO.TRAN_SETTLE_DATE ",
				" , YC.YLDCMP_NAME ",
				" , DCC.DCC_NAME ",
				" , MON.PRECIO_SUCIO AS DIVISA",
				" , VV.PRECIO_SUCIO",
				" , VV.PLAZO",
				" , VV.DIAS_VENC DXV",
				" , BO.PROCESS_DATE + VV.DIAS_VENC AS F_VTO",
				" , BO.NEW_POSITION AS TRAN_POSITION",
				" , BO.PROJ_DATE",
				" FROM VCUBE_USER.BLOTTER_OPERACIONES_VENTAS_RESULTADOS BO",
				" 		LEFT JOIN VCUBE.INS_DETAIL ID ON (BO.PROCESS_DATE = ID.PROCESS_DATE AND BO.TICKER = ID.INSD_TICKER)",
				" 		LEFT JOIN VCUBE.INSTRUMENT I ON (ID.PROCESS_DATE = I.PROCESS_DATE AND ID.INS_ID  = I.INS_ID)",
				" 		LEFT JOIN VCUBE.CURRENCY C ON (I.BASE_CCY_ID = C.CCY_ID)",
				" 		LEFT JOIN VCUBE.YIELD_COMPOUNDING YC ON (ID.YLDCMP_ID = YC.YLDCMP_ID)",
				" 		LEFT JOIN VCUBE.SIDE SD ON (I.INS_ID = SD.INS_ID AND I.PROCESS_DATE = SD.PROCESS_DATE)",
				" 	    LEFT JOIN VCUBE.DAY_COUNT_CONV DCC ON (SD.DCC_ID = DCC.DCC_ID)",
				" 	    LEFT JOIN VCUBE_USER.VECTOR_VALMER MON ON (BO.PROCESS_DATE = MON.PROCESS_DATE AND MON.INSTRUMENTO = concat(concat(concat('*C_MXP', C.CCY_NAME), '_'), C.CCY_NAME))",
				" 	    LEFT JOIN VCUBE_USER.VECTOR_VALMER vv ON (BO.PROCESS_DATE = VV.PROCESS_DATE AND VV.INSTRUMENTO = BO.TICKER)",
				" WHERE BO.PROCESS_DATE = :I_PROCESS_DATE",
				" ),",
				" ",
				" CASHFLOWS AS (",
				"  SELECT",
				"      T.*",
				"      ,INTR.INT_FLOW",
				"      ,INTR.INT_START_DATE",
				"      ,INTR.INT_END_DATE",
				"      ,INTR.INT_PAYMENT_DATE",
				"      ,INTR.INT_AMOUNT + NVL(CF.CF_AMOUNT, 0) TOTAL_AMOUNT",
				"      ,INTR.INT_NOTIONAL",
				"  FROM BASE_TRANSACTIONS_T1 T",
				"    	 LEFT JOIN VCUBE.INTEREST INTR ON  (T.INS_ID = INTR.INS_ID AND INTR.PROCESS_DATE = T.PROCESS_DATE)",
				" 	 LEFT JOIN VCUBE.CFLOW CF ON (T.INS_ID = CF.INS_ID AND INTR.INT_PAYMENT_DATE = CF.CF_PAYMENT_DATE AND CF.PROCESS_DATE = T.PROCESS_DATE)",
				"  WHERE",
				"       INTR.INT_END_DATE > T.PROJ_DATE),",
				"  ",
				"       ",
				" VP_DAYS AS (  ",
				"  SELECT",
				"      P.PERIOD_DATE",
				"      ,C.*",
				"      ,CASE ",
				"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM P.PERIOD_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM P.PERIOD_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM P.PERIOD_DATE),31,30,EXTRACT(DAY FROM P.PERIOD_DATE))) ",
				"      	ELSE INT_END_DATE - P.PERIOD_DATE ",
				"      END ",
				"      	AS DAYS ",
				"      ,CASE ",
				"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM TRAN_SETTLE_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM TRAN_SETTLE_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM TRAN_SETTLE_DATE),31,30,EXTRACT(DAY FROM TRAN_SETTLE_DATE)))",
				"      	ELSE INT_PAYMENT_DATE - TRAN_SETTLE_DATE ",
				"      END ",
				"      AS DAYS_FROM_SETTLE",
				"      ,CASE ",
				"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM INT_START_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM INT_START_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM INT_START_DATE),31,30,EXTRACT(DAY FROM INT_START_DATE)))",
				"      	ELSE INT_END_DATE - INT_START_DATE ",
				"      END ",
				"      AS COUPON_DAYS ",
				"      ,CASE ",
				"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM PROCESS_DATE)-EXTRACT(YEAR FROM FECHA_INICIO_CUPON)) + 30 * (EXTRACT(MONTH FROM PROCESS_DATE)-EXTRACT(MONTH FROM FECHA_INICIO_CUPON)) +  (DECODE(EXTRACT(DAY FROM PROCESS_DATE),31,30,EXTRACT(DAY FROM PROCESS_DATE))-DECODE(EXTRACT(DAY FROM FECHA_INICIO_CUPON),31,30,EXTRACT(DAY FROM FECHA_INICIO_CUPON)))",
				"      	ELSE PROCESS_DATE - FECHA_INICIO_CUPON ",
				"      END  ",
				"      AS INT_DEV_DAYS ",
				"      ,CASE ",
				"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM F_ULT_COMPRA)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM F_ULT_COMPRA)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM F_ULT_COMPRA),31,30,EXTRACT(DAY FROM F_ULT_COMPRA))) ",
				"      	ELSE INT_END_DATE - F_ULT_COMPRA ",
				"      END ",
				"      	AS DAYS_FECHA_COMPRA",
				"       ,CASE ",
				"      	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM PROCESS_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM PROCESS_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM PROCESS_DATE),31,30,EXTRACT(DAY FROM PROCESS_DATE))) ",
				"      	ELSE INT_END_DATE - PROCESS_DATE ",
				"      END ",
				"      	AS DAYS_PROCESS_DATE",
				"  FROM P_DATES P",
				"          LEFT JOIN CASHFLOWS C ON (C.INT_END_DATE > P.PERIOD_DATE)",
				"  WHERE P.PERIOD_DATE < C.INT_END_DATE	",
				"  ),",
				" ",
				"  ",
				" VP AS (  ",
				"      SELECT",
				"         vp.*",
				"       ,CASE",
				"         WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS  / COUPON_DAYS )",
				"         WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )",
				"         WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )        ",
				"         WHEN YLDCMP_NAME = 'None' AND TIPO_VALOR IN ('SP','SC') THEN 1.0 / POWER ( 1.0 + TRAN_RATE * DAYS_FROM_SETTLE / 360, DAYS / DAYS_FROM_SETTLE   )",
				"      ELSE -1000000.0",
				"      END DF",
				"       ,CASE",
				"         WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_FECHA_COMPRA  / COUPON_DAYS )",
				"         WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_FECHA_COMPRA / COUPON_DAYS  )",
				"         WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_FECHA_COMPRA / COUPON_DAYS  )        ",
				"         WHEN YLDCMP_NAME = 'None' AND TIPO_VALOR IN ('SP','SC') THEN 1.0 / POWER ( 1.0 + TRAN_RATE * DAYS_FROM_SETTLE / 360, DAYS_FECHA_COMPRA / DAYS_FROM_SETTLE   )",
				"      ELSE -1000000.0",
				"      END DF_FECHA_COMPRA",
				"      ,CASE",
				"         WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_PROCESS_DATE  / COUPON_DAYS )",
				"         WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_PROCESS_DATE / COUPON_DAYS  )",
				"         WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS_PROCESS_DATE / COUPON_DAYS  )        ",
				"         WHEN YLDCMP_NAME = 'None' AND TIPO_VALOR IN ('SP','SC') THEN 1.0 / POWER ( 1.0 + TRAN_RATE * DAYS_FROM_SETTLE / 360, DAYS_PROCESS_DATE / DAYS_FROM_SETTLE   )",
				"      ELSE -1000000.0",
				"      END DF_PROCESS_DATE",
				"   , CASE WHEN FECHA_FIN_CUPON = INT_END_DATE THEN TASA_CUPON * INT_NOTIONAL * INT_DEV_DAYS / 360.0 ELSE 0.0 END AS INTERES_CPN_YO ",
				"  FROM VP_DAYS vp",
				"  )",
				"  ",
				"  --SACAR LOS VALORES QUE SE NECESITEN",
				"  SELECT  ",
				" 	VP.PROCESS_DATE",
				" 	 ,VP.TRAN_DEAL",
				" 	 ,PF.PORT_NAME AS PORT_ID", 
				" 	 ,VP.CCY_NAME",
				" 	 ,CASE WHEN VP.TIPO_VALOR IN ('SC','SP') THEN 'BONO CUPON CERO A DESCUENTO' ELSE 'BONO' END AS INSTRUMENTO",
				" 	 ,VP.TIPO_VALOR",
				" 	 ,VP.EMISORA",
				" 	 ,VP.SERIE",
				" 	 ,VP.T",
				" 	 ,VP.F_ULT_COMPRA",
				" 	 ,VP.F_VTO",
				" 	 ,VP.PLAZO",
				" 	 ,VP.DXV",
				" 	 ,VP.TASA_COMPRA AS TASA_PACT",
				" 	 ,VP.CLAS_CONTABLE AS C",
				" 	 ,VP.TRAN_POSITION AS TITULOS",
				" 	 ,(SUM(TOTAL_AMOUNT* DF_FECHA_COMPRA) * DIVISA + INTERES_CPN) * TRAN_POSITION AS COSTO",
				" 	 ,SUM(TOTAL_AMOUNT* DF) * nvl(RPU.UDI_VALUE,0.0) AS PRECIO",
				" 	 ,VP.TRAN_RATE AS TASA",
				" 	 ,(SUM(TOTAL_AMOUNT* DF_PROCESS_DATE) * DIVISA + INTERES_CPN)* TRAN_POSITION AS VALOR ",
				" 	 ,INTERES_CPN * TRAN_POSITION AS INTERES_CPN", 
				" 	 ,SUM(TOTAL_AMOUNT* DF) * nvl(RPU.UDI_VALUE,0.0) * TRAN_POSITION AS TOTAL",
				"  	,VP.TASA_CUPON AS TASA_CPN",
				"  	,VP.FECHA_FIN_CUPON AS F_PROX_CUPON",
				"  	, CASE WHEN VP.CLAS_RIESGO  = 'Reservas' THEN TRAN_POSITION ELSE 0.0 END AS TIT_TECNICAS",
				"  	, CASE WHEN VP.CLAS_RIESGO  = 'Capital' THEN TRAN_POSITION ELSE 0.0 END AS TIT_CAPITAL",
				"  	, CASE WHEN VP.CLAS_RIESGO  = 'Otros Pasivos' THEN TRAN_POSITION ELSE 0.0 END AS TIT_OTROS",
				"  	,VP.PERIOD_DATE AS FECHA_CARTERA",
//				"   	, 'BLOTTER OPERACIONES' AS TIPO_CARTERA 	",
//				"   	, PROJ_DATE",
				"  FROM VP VP ",
				" 	LEFT JOIN VCUBE_USER.RISK_PROYECCION_UDI RPU ON (RPU.PERIOD_DATE = VP.PERIOD_DATE AND RPU.PROCESS_DATE = VP.PROCESS_DATE)",
				" 	LEFT JOIN VCUBE.PORTFOLIO PF ON (VP.PORTFOLIO = PF.PORT_ID)", 
				"  WHERE VP.PERIOD_DATE >= VP.PROJ_DATE",
				"  GROUP BY  ",
				" 	VP.PROCESS_DATE",
				" 	 ,VP.TRAN_DEAL",
				" 	 ,PF.PORT_NAME", 
				" 	 ,VP.CCY_NAME",
				" 	 ,CASE WHEN VP.TIPO_VALOR IN ('SC','SP') THEN 'BONO CUPON CERO A DESCUENTO' ELSE 'BONO' END",
				" 	 ,VP.TIPO_VALOR",
				" 	 ,VP.EMISORA",
				" 	 ,VP.SERIE",
				" 	 ,VP.T",
				" 	 ,VP.F_ULT_COMPRA",
				" 	 ,VP.F_VTO",
				" 	 ,VP.PLAZO",
				" 	 ,VP.DXV",
				" 	 ,VP.TASA_COMPRA",
				" 	 ,VP.CLAS_CONTABLE ",
				" 	 ,VP.TRAN_POSITION ",
				" 	 ,VP.TRAN_RATE",
				"  	,VP.TASA_CUPON ",
				"  	,VP.FECHA_FIN_CUPON ",
				"  	, CASE WHEN VP.CLAS_RIESGO  = 'Reservas' THEN TRAN_POSITION ELSE 0.0 END ",
				"  	, CASE WHEN VP.CLAS_RIESGO  = 'Capital' THEN TRAN_POSITION ELSE 0.0 END ",
				"  	, CASE WHEN VP.CLAS_RIESGO  = 'Otros Pasivos' THEN TRAN_POSITION ELSE 0.0 END",
				"  	,VP.PERIOD_DATE",
				"  	,VP.DIVISA",
				"  	,VP.INTERES_CPN",
				"  	,RPU.UDI_VALUE",
//				"  	, PROJ_DATE",
				" 	ORDER BY VP.TRAN_DEAL, VP.PERIOD_DATE"
				)).withParameter(Parameter.of("I_PROCESS_DATE", ColumnType.ORACLE_DATE))
				.withParameter(Parameter.of("K_PROY", ColumnType.INTEGER));
	
	Query qReporteGananciaPerdida = Query.withSQL(
			String.join("  \n ",
					"WITH BLOTTER_SELL_OPERACIONES AS (	", 
					"SELECT ", 
					" 	PROCESS_DATE ", 
					"	, PORTFOLIO ", 
					"	, CLASIFICACION_CONTABLE ", 
					"	, CLASIFICACION_RIESGO ", 
					"	, TICKER ", 
					"	, TRADE_DATE", 
					"	, TRAN_SETTLE_DATE ", 
					"	, YIELD", 
					"FROM VCUBE_USER.BLOTTER_OPERACIONES bo ", 
					"WHERE ", 
					"process_date = :I_PROCESS_DATE", 
					"AND BUY_SELL = 'Sell'", 
					"	),", 
					"BASE_TRANSACTIONS AS (", 
					"SELECT ", 
					"	BOVR.PROCESS_DATE ", 
					"	, BOVR.INS_ID ", 
					"	, BOVR.TRAN_DEAL", 
					"	, BOVR.TICKER ", 
					"	, BOVR.TRAN_RATE ", 
					"	, OP.YIELD/100.00 AS YIELD_BLOTTER", 
					"	, T.TRAN_POSITION AS TRAN_POSITION_TRANSACTION", 
					"	, SUM(- NEW_POSITION) AS TITULOS_VENTA", 
					"	, SUM(BOVR.POSITION_FINAL) AS POSICION_FINAL ", 
					"	, BOVR.PROJ_DATE", 
					"	FROM vcube_user.BLOTTER_OPERACIONES_VENTAS_RESULTADOS bovr", 
					"	LEFT JOIN VCUBE.TRANSACTION t ON (BOVR.TRAN_DEAL = T.TRAN_DEAL AND BOVR.PROCESS_DATE = T.PROCESS_DATE)", 
					"	LEFT JOIN VCUBE_USER.BLOTTER_SELL_OPERACIONES OP ON (OP.PROCESS_DATE = BOVR.PROCESS_DATE AND OP.PORTFOLIO = BOVR.PORT_ID AND OP.CLASIFICACION_CONTABLE = BOVR.CLAS_CONTABLE AND OP.CLASIFICACION_RIESGO = BOVR.CLAS_RIESGO AND OP.TICKER = BOVR.TICKER AND OP.TRADE_DATE = BOVR.PROJ_DATE AND OP.PROCESS_DATE = BOVR.PROCESS_DATE )", 
					"WHERE ", 
					"	BOVR.PROCESS_DATE = :I_PROCESS_DATE", 
					"GROUP BY ", 
					"	BOVR.PROCESS_DATE ", 
					"	, BOVR.INS_ID 	", 
					"	, BOVR.TRAN_DEAL", 
					"	, BOVR.TICKER ", 
					"	, BOVR.TRAN_RATE ", 
					"	, OP.YIELD/100.00", 
					"	, T.TRAN_POSITION", 
					"	, BOVR.PROJ_DATE", 
					"ORDER BY TICKER, TRAN_DEAL", 
					"), ", 
					"INS_TAX AS (", 
					"SELECT DISTINCT", 
					"   T.PROCESS_DATE", 
					"	, T.TRAN_DEAL", 
					"    , T.PROJ_DATE", 
					"    , T.INS_ID", 
					"    , T.TICKER", 
					"    , T.TRAN_RATE", 
					"    , T.YIELD_BLOTTER", 
					"    ,SUM(T.TITULOS_VENTA) TRAN_POSITION", 
					" FROM VCUBE.BASE_TRANSACTIONS T", 
					" GROUP BY     ", 
					"  	T.PROCESS_DATE", 
					"	, T.TRAN_DEAL", 
					"	, T.PROJ_DATE", 
					"	, T.INS_ID", 
					"	, T.TICKER", 
					"	, T.TRAN_RATE", 
					"	, T.YIELD_BLOTTER", 
					"       ),", 
					" DIST_INS AS (", 
					"   SELECT DISTINCT", 
					"    T.PROCESS_DATE   ", 
					"   ,T.INS_ID", 
					"   FROM BASE_TRANSACTIONS T", 
					" ),", 
					" CASHFLOWS AS (", 
					"   SELECT", 
					"       IT.PROCESS_DATE", 
					"   		,I.INS_ID", 
					"       ,IT.TRAN_DEAL", 
					"       ,ID.INSD_TICKER TICKER", 
					"       ,C.CCY_NAME CCY", 
					"       ,INTR.INT_FLOW", 
					"       ,INTR.INT_START_DATE", 
					"       ,INTR.INT_END_DATE", 
					"       ,INTR.INT_PAYMENT_DATE", 
					"       ,LAST_DAY(INTR.INT_PAYMENT_DATE) P_DATE", 
					"       ,INTR.INT_AMOUNT + NVL(CF.CF_AMOUNT, 0) TOTAL_AMOUNT", 
					"       ,YC.YLDCMP_NAME", 
					"       ,IT.TRAN_RATE", 
					"       ,IT.YIELD_BLOTTER", 
					"       ,IT.TRAN_POSITION", 
					"       ,IT.PROJ_DATE", 
					"       , DCC.DCC_NAME", 
					"       , IT.PROJ_DATE AS TRAN_SETTLE_DATE", 
					"   FROM DIST_INS DI", 
					"       LEFT JOIN INS_TAX IT ON                 (IT.INS_ID = DI.INS_ID)", 
					"       LEFT JOIN VCUBE.INSTRUMENT I ON         (I.INS_ID = DI.INS_ID AND I.PROCESS_DATE= DI.PROCESS_DATE)", 
					"       LEFT JOIN VCUBE.INS_DETAIL ID ON         (I.INS_ID = ID.INS_ID AND ID.PROCESS_DATE = DI.PROCESS_DATE)", 
					"       LEFT JOIN VCUBE.CURRENCY C ON             (I.BASE_CCY_ID = C.CCY_ID)", 
					"       LEFT JOIN VCUBE.INTEREST INTR ON         (I.INS_ID = INTR.INS_ID AND INTR.PROCESS_DATE= DI.PROCESS_DATE)", 
					"       LEFT JOIN VCUBE.CFLOW CF ON             (I.INS_ID = CF.INS_ID AND INTR.INT_PAYMENT_DATE = CF.CF_PAYMENT_DATE AND CF.PROCESS_DATE = DI.PROCESS_DATE)", 
					"       LEFT JOIN VCUBE.YIELD_COMPOUNDING YC ON (ID.YLDCMP_ID = YC.YLDCMP_ID)", 
					"       LEFT JOIN VCUBE.SIDE SD ON (I.INS_ID = SD.INS_ID AND I.PROCESS_DATE = SD.PROCESS_DATE)", 
					"	   LEFT JOIN VCUBE.DAY_COUNT_CONV DCC ON (SD.DCC_ID = DCC.DCC_ID)", 
					"  WHERE", 
					"        INTR.INT_END_DATE > IT.PROJ_DATE", 
					" ),",  
					"  VP_DAYS AS (  ", 
					"     SELECT", 
					"        C.*", 
					"         ,CASE ", 
					"         	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM C.PROJ_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM C.PROJ_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM C.PROJ_DATE),31,30,EXTRACT(DAY FROM C.PROJ_DATE))) ", 
					"         	ELSE INT_END_DATE - C.PROJ_DATE ", 
					"         END ", 
					"         	AS DAYS ", 
					"         ,CASE ", 
					"         	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM TRAN_SETTLE_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM TRAN_SETTLE_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM TRAN_SETTLE_DATE),31,30,EXTRACT(DAY FROM TRAN_SETTLE_DATE)))", 
					"         	ELSE INT_PAYMENT_DATE - TRAN_SETTLE_DATE ", 
					"         END ", 
					"         AS DAYS_FROM_SETTLE", 
					"         ,CASE ", 
					"         	WHEN DCC_NAME = '30/360' THEN 360 * (EXTRACT(YEAR FROM INT_END_DATE)-EXTRACT(YEAR FROM INT_START_DATE)) + 30 * (EXTRACT(MONTH FROM INT_END_DATE)-EXTRACT(MONTH FROM INT_START_DATE)) +  (DECODE(EXTRACT(DAY FROM INT_END_DATE),31,30,EXTRACT(DAY FROM INT_END_DATE))-DECODE(EXTRACT(DAY FROM INT_START_DATE),31,30,EXTRACT(DAY FROM INT_START_DATE)))", 
					"         	ELSE INT_END_DATE - INT_START_DATE ", 
					"         END ", 
					"         AS COUPON_DAYS   ", 
					" FROM ", 
					" 	CASHFLOWS C", 
					" WHERE C.PROJ_DATE < C.INT_END_DATE	", 
					" ),", 
					"VP AS (  ", 
					"     SELECT", 
					"        vp.*", 
					"      ,CASE", 
					"        WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS  / COUPON_DAYS )", 
					"        WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )", 
					"        WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + TRAN_RATE * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )        ", 
					"        WHEN YLDCMP_NAME = 'None' AND SUBSTR(TICKER,1,2) IN ('SP','SC') THEN 1.0 / POWER ( 1.0 + TRAN_RATE * DAYS_FROM_SETTLE / 360, DAYS / DAYS_FROM_SETTLE   )", 
					"     ELSE -1000000.0", 
					"     END DF_TRAN_RATE", 
					"     ,CASE", 
					"        WHEN YLDCMP_NAME = 'Semi-Annual (182/360)' THEN 1.0 / POWER ( 1.0 + YIELD_BLOTTER * COUPON_DAYS / 360,  DAYS  / COUPON_DAYS )", 
					"        WHEN YLDCMP_NAME = 'Quarterly (91/360)' THEN 1.0 / POWER ( 1.0 + YIELD_BLOTTER * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )", 
					"        WHEN YLDCMP_NAME = 'Monthly' THEN 1.0 / POWER ( 1.0 + YIELD_BLOTTER * COUPON_DAYS / 360,  DAYS / COUPON_DAYS  )        ", 
					"        WHEN YLDCMP_NAME = 'None' AND SUBSTR(TICKER,1,2) IN ('SP','SC') THEN 1.0 / POWER ( 1.0 + YIELD_BLOTTER * DAYS_FROM_SETTLE / 360, DAYS / DAYS_FROM_SETTLE   )", 
					"     ELSE -1000000.0", 
					"     END DF_YIELD_BLOTTER", 
					" FROM VP_DAYS vp", 
					" )", 
					" SELECT  ", 
					"	 A.PROCESS_DATE", 
					"	, A.TRAN_DEAL", 
					"	, TICKER", 
					"	, A.PROJ_DATE AS FECHA_CARTERA", 
					"	, TRAN_POSITION AS TITULOS_VENDIDOS", 
					"	, A.TRAN_RATE AS R_CONTABLE", 
					"	, A.YIELD_BLOTTER AS R_VENTA", 
					"	, SUM(TOTAL_AMOUNT* DF_TRAN_RATE ) * RPU.UDI_VALUE AS PX_CONTABLE_MXN", 
					"	, SUM(TOTAL_AMOUNT* DF_YIELD_BLOTTER) * RPU.UDI_VALUE  AS PX_VENTA_MXN", 
					"	, (SUM(TOTAL_AMOUNT*DF_YIELD_BLOTTER ) - SUM(TOTAL_AMOUNT* DF_TRAN_RATE)) * RPU.UDI_VALUE * TRAN_POSITION  AS P_G_MXN", 
					"FROM VP A ", 
					"	LEFT JOIN VCUBE_USER.RISK_PROYECCION_UDI RPU ON (A.PROCESS_DATE = RPU.PROCESS_DATE AND A.PROJ_DATE = RPU.PERIOD_DATE)", 
					"GROUP BY  ", 
					"A.PROCESS_DATE", 
					", A.TRAN_DEAL", 
					", TICKER", 
					", A.PROJ_DATE", 
					", TRAN_POSITION", 
					", A.TRAN_RATE ", 
					", A.YIELD_BLOTTER ", 
					", RPU.UDI_VALUE", 
					" ORDER BY A.PROJ_DATE, A.TICKER, A.TRAN_DEAL"
					)).withParameter(Parameter.of("I_PROCESS_DATE", ColumnType.ORACLE_DATE));

}
